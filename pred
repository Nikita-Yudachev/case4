'''
Case-Study - 4
Developers:
Yudachev - 60%
Kuleshov - 40%
'''


import numpy as np
import string
file = input('Имя файла: ',)
n = int(input('Количество генерируемых предложений: ', ))
text = open(file, encoding='utf8').read()
tex = text.split()
corpus = []
for i in tex:
    if i not in string.punctuation:
        if i not in '—':
            corpus.append(i)


def make_pairs(corpus):
    for j in range(len(corpus) - 1):
        yield (corpus[j], corpus[j + 1])


pairs = make_pairs(corpus)
word_dict = {}
for word_1, word_2 in pairs:
    if word_1 in word_dict.keys():
        word_dict[word_1].append(word_2)
    else:
        word_dict[word_1] = [word_2]
word_gl = []
for i in word_dict:
    if i[0] in 'АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯ':
        word_gl.append(i)


def get_sen():
    chain = []
    k = 0
    word_first = np.random.choice(word_gl)
    chain.append(word_first)
    for j in range(19):
        if chain[-1][-1] != '.' and chain[-1][-1] != '!' and chain[-1][-1] != '?':
            if k < 19:
                chain.append(np.random.choice(word_dict[chain[-1]]))
                k += 1
            if k == 19:
                w = chain[-1]+'.'
                chain[-1] = w
        if 0 < k < 4 and (chain[-1][-1] == '.' or chain[-1][-1] == '!' or chain[-1][-1] == '?'):
            q = chain[-1]
            chain[-1] = q[:-1]
            chain.append(np.random.choice(corpus))
            k += 1
        if k == 0 and (chain[-1][-1] == '.' or chain[-1][-1] == '!' or chain[-1][-1] == '?'):
            s = chain[0]
            chain[0] = s[:-1]
            chain.append(np.random.choice(word_dict[word_first]))
            k += 1
    return ' '.join(chain)


itog = ''
for i in range(n):
    itog += get_sen() + ' '
print(itog)
